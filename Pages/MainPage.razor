@using MoodSwings.Services;
@using MoodSwings.Shared.Components;
@using MoodSwings.Shared.ViewModels;
@using MoodSwings.Shared.Store;

@page "/home"

@inject AuthenticationService AuthService
@inject ConfigurationService ConfService
@inject AppState State

<div class="app">
    <section class="title-area">
        <div class="title-area-showcase">
            <div class="profile-avatar">
                <img src="./css/img/user-icon.svg" width="24px" alt="" srcset="">
            </div>
            <Logo/>
            <p>Find the tracks matching your current mood</p>
            @if(!_userIsAuthenticated)
            {
                <a href="@ConfService.AuthURL" class="btn btn-primary">Sign in to Spotify</a>
            }
            
        </div>
    </section>
    <section class="main-area">
        <section class="main-area-top">
            <div class="guide-container">
                @if(_steps!=null){
                    foreach (var step in _steps)
                    {
                        <GuideStep Caption=@step.Caption IsSelected=@CheckSelected(step.Id) StepNumber=@step.Id />
                        if(@step.Id<_steps.Count){
                            <div class="line"></div>
                        }
                    }
                }
            </div>
        </section>
        <section class="main-area-content">
            @if(State.CurrentStep.Equals(1)){
                <DefinePage/>
            }
            
        </section>
        <section class="main-area-actions">
            <div class="navigation-buttons">
                @if(State.CurrentStep <= 3 && State.CurrentStep > 1)
                {
                    <button class="nav-button-left">Previous</button>
                }
                @if (State.CurrentStep<3&&State.CurrentStep>=1)
                {
                    @if (State.ModelIsValid)
                    {
                        <button class="nav-button-right">Next</button>
                    }
                    else
                    {
                        <button disabled=true class="nav-button-right">Next</button>
                    }

                }
            </div>
            
            
        </section>
    </section>
</div>

@functions{
    private bool _userIsAuthenticated => AuthService.IsAuthenticated;
    private bool _modelIsValid = false;
    private List<StepModel> _steps = new List<StepModel>
    {
    new StepModel{Id=1,Caption="Define",IsSelected=true},
    new StepModel{Id=2,Caption="Assemble",IsSelected=false},
    new StepModel{Id=3,Caption="Enjoy!",IsSelected=false}
    };


    bool CheckSelected(int id)
    {
        return State.CurrentStep.Equals(id);

    }

    async Task MoveBack()
    {

    }

}